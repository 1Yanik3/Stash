load_module /usr/lib/nginx/modules/ngx_http_auth_jwt_module.so;

# worker_processes  5;  ## Default: 1
error_log logs/error.log;
pid logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections 4096; ## Default: 1024
}

http {
  #   include    conf/mime.types;
  #   include    /etc/nginx/proxy.conf;
  #   include    /etc/nginx/fastcgi.conf;
  #   index    index.html index.htm index.php;

  proxy_read_timeout 300;
  proxy_connect_timeout 300;
  proxy_send_timeout 300;

  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] $status '
  '"$request" $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log logs/access.log main;
  sendfile on;
  tcp_nopush on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  # https://www.tutorialspoint.com/how-to-configure-nginx-as-reverse-proxy-for-websocket
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 80;

    auth_jwt_key "superSecretKey";
    client_max_body_size 10G;

    location /file {
      auth_jwt $cookie_session;
      alias /app/media/;
      default_type image/jpeg;

      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Methods' 'GET' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Headers' '*' always;
    }

    location / {
      proxy_pass http://127.0.0.1:3000/;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Methods' 'GET' always;
      add_header 'Access-Control-Allow-Credentials' 'true';
    }
  }

}
